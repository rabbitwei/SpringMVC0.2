<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd  ">

    <!--视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>


    <!--可以访问静态资源-->
    <mvc:default-servlet-handler/>
    <!--注册已经存在IOC容器中的bean，并且不能缺少，因为它负责注册 RequestMappingHandlerMapping，
    请求映射的bean，没有该 bean无法通过 url 访问 controller-->
    <mvc:annotation-driven/>

    <!--扫描注解-->
    <!--<context:annotation-config/>--> <!--下面的标签包含了该功能-->
    <context:component-scan base-package="cn.rabbit"/>



    <!--配置拦截器， 拦截器的本质还是 Spring 的 AOP 操作-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--拦截的url-->
            <mvc:mapping path="/index"/>

            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <bean class="cn.rabbit.interceptor.IndexInterceptor"/>
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，
            然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
   </mvc:interceptors>



</beans>